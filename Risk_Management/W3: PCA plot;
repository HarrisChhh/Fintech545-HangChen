Q1: Use PCA and plot the cumulative variance 
A1:
import numpy as np
import pandas as pd
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
from google.colab import drive
drive.mount('/content/drive')

Option_file = '/content/drive/MyDrive/Colab Notebooks/AAPL_Options.csv'
data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/DailyReturn.csv')

# Exponentially Weighted Covariance Function
def exponentially_weighted_covariance(X, lambd):
    T, N = X.shape
    weights = lambd ** np.arange(T - 1, -1, -1)
    weights /= weights.sum()
    mu = np.average(X, axis=0, weights=weights)
    X_centered = X - mu
    return (X_centered * np.sqrt(weights[:, None])).T @ (X_centered * np.sqrt(weights[:, None]))

# Compute PCA for Multiple Lambda Values
lambdas = [0.999, 0.99, 0.9, 0.7, 0.5, 0.3]
cumulative_variances = {}

for lambd in lambdas:
    Sigma = exponentially_weighted_covariance(data.values, lambd)
    pca = PCA().fit(Sigma)
    cumulative_variances[lambd] = np.cumsum(pca.explained_variance_ratio_)

# Plot Results
plt.figure(figsize=(10, 6))
for lambd, cum_var in cumulative_variances.items():
    plt.plot(range(1, len(cum_var) + 1), cum_var, label=f'Î» = {lambd}')
plt.title('Cumulative Variance Explained by PCA')
plt.xlabel('Number of Components')
plt.ylabel('Cumulative Variance Explained')
plt.legend()
plt.grid()

